version: '2.2'
services:
  app:
    restart: always
    build: .
    ports:
      - 9229:9229
      - 3000:3000
    expose:
      - '3000'
    links:
      - db
    depends_on:
      - db
    command: npm run install-start
    mem_limit: 300M
    environment:
      - RUNNING_PORT=3000
      - DATABASE_URL=postgres://postgres:password@db:5432/jobget
    volumes:
      - npm-cache:/home/nodejs/.npm
      - .:/home/nodejs/app
      - /home/nodejs/app/node_modules
  test:
    restart: always
    build: .
    ports:
      - 3001:3001
    expose:
      - '3001'
    links:
      - db
    depends_on:
      - db
    command: npm run test:watch
    mem_limit: 300M
    environment:
      - RUNNING_PORT=3001
      - DATABASE_URL=postgres://test:test@db:5432/test
    volumes:
      - npm-cache:/home/nodejs/.npm
      - .:/home/nodejs/app
      - /home/nodejs/app/node_modules
  db:
    image: postgres:9.6.2-alpine
    restart: always
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=jobget
  adminer:
    image: adminer
    restart: always
    ports:
      - 3004:8080
    expose:
      - '8080'
volumes:
  npm-cache:
    external: false
  pgdata:
    external: false
  certs:
  html:
  vhost:
